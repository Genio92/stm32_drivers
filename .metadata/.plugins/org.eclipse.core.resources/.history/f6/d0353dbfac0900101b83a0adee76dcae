/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */
//notes
/*	-gwdwarf-2 ensures STM32CubeIDE generates debugging information in DWARF version 2.
	It improves compatibility with GDB, ST-Link, and OpenOCD.
	It reduces debugging overhead, making it ideal for embedded systems.
	Ensures stable debugging across various toolchains.
*/

#include <stdint.h>
#include <STM32F103x8.h>
#include <stm32f103x8_gpio_driver.h>
#include <lcd.h>
#include <stm32f103x8_EXTI_driver.h>
#include <keypad.h>



#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif




void my_call_back();
void delay(){

for(int i=0;i<100000;i++);
return;
}
GPIO_PinConfig_t led;
EXTI_PinConfig_t push_button;

int main(void)
{   //used Peripherals  clock enable
    RCC_GPIOA_CLK_EN();
    RCC_GPIOB_CLK_EN();
    RCC_AFIO_CLK_EN();
    //led setup
    led.GPIO_MODE=GPIO_MODE_OUTPUT_PP;
    led.GPIO_Output_Speed=GPIO_SPEED_10M;
    led.GPIO_PinNumber=3;
    led.PIN_GPIO=GPIOA;
    MCAL_GPIO_Init(&led);
    MCAL_GPIO_WritePin(&led, HIGH);
    //push button setup
    push_button.EXTI_PIN=EXTI1PB1;
    push_button.IRQ_EN=EXTI_IRQ_Enable;
    push_button.P_IRQ_CallBack=my_call_back;
    push_button.Trigger_Case=EXTI_Trigger_RISING;
    MCAL_EXTI_GPIO_Init(&push_button);

	while(1){

		MCAL_GPIO_WritePin(&led,LOW);
		delay();
	}
	for(;;);
}
void my_call_back(){
	MCAL_GPIO_WritePin(&led,HIGH);


}
