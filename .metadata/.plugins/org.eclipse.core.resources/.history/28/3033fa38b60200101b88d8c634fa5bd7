/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */
//notes
/*	-gwdwarf-2 ensures STM32CubeIDE generates debugging information in DWARF version 2.
	It improves compatibility with GDB, ST-Link, and OpenOCD.
	It reduces debugging overhead, making it ideal for embedded systems.
	Ensures stable debugging across various toolchains.
*/

#include <stdint.h>
#include <STM32F103x8.h>
#include <stm32f103x8_gpio_driver.h>



#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

//#define red_led_pin GPIO_PIN_1
//#define red_led_GPIO GPIOA
//
//#define yellow_led_pin GPIO_PIN_2
//#define yellow_led_GPIO GPIOA
//
//#define green_led_pin GPIO_PIN_3
//#define green_led_GPIO GPIOA
//
//
//
//
//GPIO_PinConfig_t red_led={red_led_pin,GPIO_MODE_OUTPUT_PP,GPIO_SPEED_10M};
//GPIO_PinConfig_t yellow_led={yellow_led_pin,GPIO_MODE_OUTPUT_PP,GPIO_SPEED_10M};
//GPIO_PinConfig_t green_led={green_led_pin,GPIO_MODE_OUTPUT_PP,GPIO_SPEED_10M};


void delay(){

for(int i=0;i<100000;i++);
return;
}


int main(void)
{   // RCC_GPIOA_CLK_EN();
//	 MCAL_GPIO_Init(red_led_GPIO, &red_led);
//	 MCAL_GPIO_Init(yellow_led_GPIO, &yellow_led);
//	 MCAL_GPIO_Init(green_led_GPIO, &green_led);

	 /* Loop forever */
	while(1){
//		MCAL_GPIO_WritePin(red_led_GPIO, red_led.GPIO_PinNumber, 1);
//		MCAL_GPIO_WritePin(yellow_led_GPIO, yellow_led.GPIO_PinNumber, 0);
//		MCAL_GPIO_WritePin(green_led_GPIO, green_led.GPIO_PinNumber, 0);
//		delay();
//		MCAL_GPIO_WritePin(red_led_GPIO, red_led.GPIO_PinNumber, 0);
//		MCAL_GPIO_WritePin(yellow_led_GPIO, yellow_led.GPIO_PinNumber, 1);
//		MCAL_GPIO_WritePin(green_led_GPIO, green_led.GPIO_PinNumber, 0);
//		delay();
//		MCAL_GPIO_WritePin(red_led_GPIO, red_led.GPIO_PinNumber, 0);
//		MCAL_GPIO_WritePin(yellow_led_GPIO, yellow_led.GPIO_PinNumber, 0);
//		MCAL_GPIO_WritePin(green_led_GPIO, green_led.GPIO_PinNumber, 1);
		delay();
	}
	for(;;);
}
